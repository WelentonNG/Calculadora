import time 

def timer2 ():
    print("Fechando o programa... ‚è≥")
    time.sleep(3)
    print("bye bye :)   ")



def operacao_basicas():
    num1 =float(input('Digite o primeiro n√∫mero: '))
    op = input('Digite a opera√ß√£o (+, -, *, /): ')
    num2 =float(input('Digite o segundo n√∫mero: '))

    if op == '+':
        print(f'Resultado: {num1 + num2}')
    elif op == '-':
        print(f'Resultado: {num1 - num2}')
    elif op == '*':
        print(f'Resultado: {num1 * num2}')
    elif op == '/':
        if num2 != 0:
            print(f'Resultado: {num1 / num2}')
        else:
            print('Erro: Divis√£o por zero n√£o √© permitida.')
            

def regra_de_tres():
    print("\n=== REGRA DE TR√äS SIMPLES ===")
    print("""
    A       B
    ‚îÄ‚îÄ  =  ‚îÄ‚îÄ
    C       X

    Onde:
    - A e B s√£o grandezas diretamente proporcionais.
    - Voc√™ conhece A, B e C, e quer encontrar X.
    """)

    print("Digite os valores conhecidos:")
    try:
        A = float(input("Valor de A: "))
        B = float(input("Valor de B: "))
        C = float(input("Valor de C: "))
    except ValueError:
        print("Erro: Digite apenas n√∫meros!")
        return

    if A == 0:
        print("Erro: 'A' n√£o pode ser zero (divis√£o inv√°lida).")
        return

    X = (B * C) / A
    print(f"\nResultado: X = {X:.2f}\n")


def potencia(base, expoente):
 
    return base ** expoente

import math

def calcular_radiciacao():
    print("\n=== RADICIA√á√ÉO (‚àö) ===")
    print("Escolha o tipo de raiz:")
    print("1 - Raiz quadrada (‚àöx)")
    print("2 - Raiz c√∫bica (¬≥‚àöx)")
    print("3 - Raiz en√©sima (‚Åø‚àöx)")
    
    tipo = input("üëâ Digite a op√ß√£o desejada (1-3): ")
    
    try:
        if tipo == '1':
            num = float(input("Digite o n√∫mero para calcular a raiz quadrada: "))
            if num < 0:
                print("Erro: N√£o existe raiz real de n√∫mero negativo!")
            else:
                resultado = math.sqrt(num)
                print(f"‚àö{num} = {resultado:.4f}")
                
        elif tipo == '2':
            num = float(input("Digite o n√∫mero para calcular a raiz c√∫bica: "))
            resultado = num ** (1/3)
            print(f"¬≥‚àö{num} = {resultado:.4f}")
            
        elif tipo == '3':
            num = float(input("Digite o n√∫mero: "))
            indice = float(input("Digite o √≠ndice da raiz: "))
            if indice == 0:
                print("Erro: √çndice n√£o pode ser zero!")
            elif num < 0 and indice % 2 == 0:
                print("Erro: N√£o existe raiz real de n√∫mero negativo com √≠ndice par!")
            else:
                resultado = num ** (1/indice)
                print(f"{indice:.0f}‚àö{num} = {resultado:.4f}")
                
        else:
            print("Op√ß√£o inv√°lida!")
            
    except ValueError:
        print("Erro: Digite apenas n√∫meros v√°lidos!")


def triangulo_retangulo():
    cat1=float(input('digite cateto 1 '))
    cat2=float(input('digite cateto 2 '))

    tr=((cat1 * cat2 )/2)
    print(f'A area √© {TR} ')



while True:
    print("\n")
    print(" "*15 + "üìä CALCULADORA üìä")
    print('\n')

    print("1 ‚ûî Opera√ß√µes b√°sicas (+ - * /)")
    print("2 ‚ûî Regra de tr√™s simples")
    print("3 ‚ûî Potencia√ß√£o (x ∏)")
    print("4 ‚ûî Radicia√ß√£o (‚àö)")
    print("5 ‚ûî Calcular tri√¢ngulo ret√¢ngulo")
    print("6 ‚ûî Sair do programa")
    print("-" * 50 + "\n")
    print("\n")
   
        
    opcao = input("üëâ Digite o n√∫mero da op√ß√£o desejada: ")

        
    if opcao== '1':
        operacao_basicas()
    elif opcao== '2':
        regra_de_tres()
    elif opcao == '3':
            print("\n=== POTENCIA√á√ÉO (x ∏) ===")
            base = float(input("Digite a base: "))
            expoente = float(input("Digite o expoente: "))
            resultado = potencia(base, expoente)
            print(f"\nResultado: {base}^{expoente} = {resultado}")
    elif opcao== '4':
        calcular_radiciacao()
    elif opcao == '5':
        triangulo_retangulo()
    elif opcao=='6':
        timer2()
        break
    else:
        print("Por gentileza digite uma op√ß√£o desejada")
        print('\n')
        print('\n')
